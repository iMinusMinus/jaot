<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ml.iamwhatiam.baostock.infrastructure.dao.KMapper">
    <resultMap id="baseResultMap" type="ml.iamwhatiam.baostock.infrastructure.dao.KDataObject">
        <result column="code" property="code" jdbcType="VARCHAR" javaType="string" />
        <result column="quote_date" property="date" jdbcType="DATE" javaType="java.time.LocalDate" />
        <result column="time" property="time" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime" />
        <result column="open" property="openingPrice" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="high" property="highPrice" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="low" property="lowPrice" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="close" property="closingPrice" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="pre_close" property="preClosePrice" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="volume" property="volume" jdbcType="INTEGER" javaType="java.lang.Long" />
        <result column="amount" property="amount" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="adjust_flag" property="adjustFlag" jdbcType="INTEGER" javaType="int" />
        <result column="turn" property="turn" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="trade_status" property="tradeStatus" jdbcType="INTEGER" javaType="int" />
        <result column="pct_chg" property="changePercent" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="pe_ttm" property="trailingTwelveMonthsPriceToEarningRatio" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="pb_mrq" property="mostRecentQuarterPriceToBookRatio" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="ps_ttm" property="trailingTwelveMonthsPriceToSaleRatio" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="pcf_ncf_ttm" property="trailingTwelveMonthsPriceToCashFlow" jdbcType="NUMERIC" javaType="java.math.BigDecimal" />
        <result column="is_st" property="specialTreatment" jdbcType="INTEGER" javaType="boolean" />
        <result column="frequency" property="frequency" jdbcType="VARCHAR" javaType="string" />
    </resultMap>
    <select id="findAll" parameterType="ml.iamwhatiam.baostock.infrastructure.dao.KDataObject" resultMap="baseResultMap">
        SELECT id, code, quote_date, time, open, high, low, close, pre_close, volume, amount, adjust_flag, turn, trade_status, pct_chg, pe_ttm, pb_mrq, ps_ttm, pcf_ncf_ttm, is_st, frequency
        FROM BAO_STOCK_K_DATA
    </select>

    <select id="findLatest" parameterType="java.util.Map" resultMap="baseResultMap">
        select id, k.code code, k.quote_date quote_date, time, open, high, low, close, pre_close, volume, amount, adjust_flag, turn, trade_status, pct_chg, pe_ttm, pb_mrq, ps_ttm, pcf_ncf_ttm, is_st, frequency
        from BAO_STOCK_K_DATA k,
             (SELECT code, max(quote_date) quote_date
              FROM BAO_STOCK_K_DATA
              <where>
                  <if test="code != null">
                      code = #{code}
                  </if>
                  <if test="tradeStatus != null">
                    AND trade_status = #{tradeStatus}
                  </if>
                  <if test="frequency != null">
                    AND frequency = #{frequency}
                  </if>
              </where>
              GROUP BY code) t
        where k.code = t.code
          and k.quote_date = t.quote_date
        <if test="frequency != null">
          and k.frequency = #{frequency}
        </if>
    </select>

    <select id="extremum" parameterType="java.util.Map" resultMap="baseResultMap">
        select code, MAX(high) high, MIN(low) low
        from BAO_STOCK_K_DATA
        where code = #{code}
          and quote_date >= #{start}
          and frequency = 'w'
        group by code
    </select>

    <insert id="insert" parameterType="ml.iamwhatiam.baostock.infrastructure.dao.KDataObject">
        INSERT INTO BAO_STOCK_K_DATA(code, quote_date, time, open, high, low, close, pre_close, volume, amount, adjust_flag, turn, trade_status, pct_chg, pe_ttm, pb_mrq, ps_ttm, pcf_ncf_ttm, is_st, frequency)
        VALUES (#{code}, #{date}, #{time,jdbcType=TIMESTAMP}, #{openingPrice,jdbcType=NUMERIC}, #{highPrice,jdbcType=NUMERIC}, #{lowPrice,jdbcType=NUMERIC}, #{closingPrice,jdbcType=NUMERIC}, #{preClosePrice,jdbcType=NUMERIC}, #{volume,jdbcType=INTEGER}, #{amount,jdbcType=NUMERIC}, #{adjustFlag}, #{turn,jdbcType=NUMERIC}, #{tradeStatus}, #{changePercent,jdbcType=NUMERIC}, #{trailingTwelveMonthsPriceToEarningRatio,jdbcType=NUMERIC}, #{mostRecentQuarterPriceToBookRatio,jdbcType=NUMERIC}, #{trailingTwelveMonthsPriceToSaleRatio,jdbcType=NUMERIC}, #{trailingTwelveMonthsPriceToCashFlow,jdbcType=NUMERIC}, #{specialTreatment}, #{frequency})
    </insert>
    <insert id="insert" parameterType="ml.iamwhatiam.baostock.infrastructure.dao.KDataObject" databaseId="oracle">
        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            SELECT SEQ_BAO_STOCK_K_DATA.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO BAO_STOCK_K_DATA(id, code, quote_date, time, open, high, low, close, pre_close, volume, amount, adjust_flag, turn, trade_status, pct_chg, pe_ttm, pb_mrq, ps_ttm, pcf_ncf_ttm, is_st, frequency)
        VALUES (#{id}, #{code}, #{date}, #{time,jdbcType=TIMESTAMP}, #{openingPrice,jdbcType=NUMERIC}, #{highPrice,jdbcType=NUMERIC}, #{lowPrice,jdbcType=NUMERIC}, #{closingPrice,jdbcType=NUMERIC}, #{preClosePrice,jdbcType=NUMERIC}, #{volume,jdbcType=INTEGER}, #{amount,jdbcType=NUMERIC}, #{adjustFlag}, #{turn,jdbcType=NUMERIC}, #{tradeStatus}, #{changePercent,jdbcType=NUMERIC}, #{trailingTwelveMonthsPriceToEarningRatio,jdbcType=NUMERIC}, #{mostRecentQuarterPriceToBookRatio,jdbcType=NUMERIC}, #{trailingTwelveMonthsPriceToSaleRatio,jdbcType=NUMERIC}, #{trailingTwelveMonthsPriceToCashFlow,jdbcType=NUMERIC}, #{specialTreatment}, #{frequency})
    </insert>

</mapper>